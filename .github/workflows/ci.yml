name: CI

on:
  push:
    tags: ["v*"]
    branches: ["master"]
  pull_request:
    branches: ["master"]

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

env:
  PACKAGE: "check-commits"
  RUST_TOOLCHAIN: "nightly"

jobs:
  compile:
    name: ${{ matrix.release-name || matrix.target || 'Unknown' }}
    permissions:
      contents: write
    runs-on: ${{ matrix.os || 'ubuntu-latest' }}
    strategy:
      fail-fast: false
      matrix:
        include:
          # Linux x86 gnu
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
            tool: cargo
          - os: ubuntu-latest
            target: i686-unknown-linux-gnu
            tool: cross

          # Linux x86 musl
          - os: ubuntu-latest
            target: x86_64-unknown-linux-musl
            tool: cross
          - os: ubuntu-latest
            target: i686-unknown-linux-musl
            tool: cross

          # Linux arm gnu
          - os: ubuntu-latest
            target: aarch64-unknown-linux-gnu
            tool: cross
          - os: ubuntu-latest
            target: armv7-unknown-linux-gnueabi
            tool: cross
          - os: ubuntu-latest
            target: armv7-unknown-linux-gnueabihf
            tool: cross

          # Linux arm musl
          - os: ubuntu-latest
            target: aarch64-unknown-linux-musl
            tool: cross
          - os: ubuntu-latest
            target: armv7-unknown-linux-musleabihf
            tool: cross

          # Linux RISC-V gnu
          - os: ubuntu-latest
            target: riscv64gc-unknown-linux-gnu
            tool: cross

          # Windows
          - os: windows-latest
            target: x86_64-pc-windows-msvc
            postfix: ".exe"
          - os: windows-latest
            target: i686-pc-windows-msvc
            postfix: ".exe"
          - os: windows-latest
            target: aarch64-pc-windows-msvc
            postfix: ".exe"
            no-test: true

          # MacOSX
          - os: macos-14
            target: x86_64-apple-darwin
          - os: macos-14
            target: aarch64-apple-darwin

          # BSD
          - os: ubuntu-latest
            target: x86_64-unknown-freebsd
            tool: cross
            no-test: true
          - os: ubuntu-latest
            target: i686-unknown-freebsd
            tool: cross
            no-test: true


    steps:
      - uses: actions/checkout@v4
        with:
          submodules: true

      - uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
          key: ${{ matrix.release-name || matrix.target }}-${{ hashFiles('**/Cargo.toml') }}
          restore-keys: |
            ${{ matrix.release-name || matrix.target }}

      - uses: dtolnay/rust-toolchain@master
        with:
          toolchain: ${{ matrix.toolchain || env.RUST_TOOLCHAIN || 'nightly' }}
          targets: ${{ matrix.target }}
          components: ${{ matrix.components || 'rustfmt, clippy' }}

      - name: Install rust targets & cross
        if: matrix.tool == 'cross'
        run: |
          rustup target add ${TARGET}
          cargo install cross --git https://github.com/cross-rs/cross
        env:
          TARGET: ${{ matrix.target }}

      - name: Cargo fmt
        uses: clechasseur/rs-cargo@v3
        with:
          command: fmt
          args: --all -- --check

      - name: Cargo clippy
        uses: clechasseur/rs-cargo@v3
        with:
          tool: ${{ matrix.tool }}
          command: clippy
          args: --target ${{ matrix.target }} ${{ matrix.extra-args }} -- -D warnings

      - name: Cargo test
        uses: clechasseur/rs-cargo@v3
        if: ${{ !matrix.no-test }}
        with:
          tool: ${{ matrix.tool }}
          command: test
          args: --target ${{ matrix.target }} ${{ matrix.extra-args }}
        env:
          RUSTFLAGS: ${{ matrix.rustflags }}

      - name: Cargo build
        uses: clechasseur/rs-cargo@v3
        with:
          tool: ${{ matrix.tool }}
          command: build
          args: --release --target ${{ matrix.target }} ${{ matrix.extra-args }}
        env:
          RUSTFLAGS: ${{ matrix.rustflags || '--cfg tokio_unstable' }}

      - name: Rename binary
        run: mv target/${{ matrix.target }}/release/${{ env.PACKAGE }}${{ matrix.postfix }} ${{ env.PACKAGE }}-${{ matrix.release-name || matrix.target }}${{ matrix.postfix }}

      - name: Upload binaries
        uses: actions/upload-artifact@v4
        if: ${{ !matrix.no-release }}
        with:
          name: ${{ matrix.release-name || matrix.target }}
          path: ${{ env.PACKAGE }}-${{ matrix.release-name || matrix.target }}${{ matrix.postfix }}

  release:
    name: Release
    needs: [compile]
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          fetch-tags: true

      - name: Merge binaries
        uses: actions/upload-artifact/merge@v4
        with:
          name: binaries
          pattern: "*"
          retention-days: 1

      - name: Download binaries
        uses: actions/download-artifact@v4
        with:
          name: binaries
          path: ./packages

      - name: Clean git tag & release
        run: |
          gh release delete latest --cleanup-tag --yes --repo $GITHUB_REPOSITORY || true
          # Move latest tag to current commit locally
          git tag latest -f
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Generate a changelog
        uses: orhun/git-cliff-action@main
        id: git-cliff
        with:
          config: .github/cliff.toml
          args: --latest --strip header
        env:
          GITHUB_REPO: ${{ github.repository }}

      - name: Github stable release
        uses: softprops/action-gh-release@v2
        if: startsWith(github.ref, 'refs/tags/v')
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          prerelease: false
          generate_release_notes: false
          body: ${{ steps.git-cliff.outputs.content }}
          files: |
            packages/*
            LICENSE

      - name: Github nightly release
        uses: softprops/action-gh-release@v2
        if: startsWith(github.ref, 'refs/heads/master')
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          prerelease: true
          generate_release_notes: false
          body: ${{ steps.git-cliff.outputs.content }}
          tag_name: "latest"
          files: |
            packages/*
            LICENSE

      - name: Release to crates.io
        run: |
          cargo publish
        env:
          CARGO_REGISTRY_TOKEN: ${{ secrets.CARGO_REGISTRY_TOKEN }}
